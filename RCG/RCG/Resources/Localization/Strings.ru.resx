<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alibi" xml:space="preserve">
    <value>Алиби</value>
  </data>
  <data name="Alive" xml:space="preserve">
    <value>Вживых</value>
  </data>
  <data name="Arrested" xml:space="preserve">
    <value>Арестован</value>
  </data>
  <data name="Assassin" xml:space="preserve">
    <value>Убийца</value>
  </data>
  <data name="AssassinDes" xml:space="preserve">
    <value>Доступен начиная c 9 игроков. Должен убить всех для победы</value>
  </data>
  <data name="AssassinWon" xml:space="preserve">
    <value>Убийца победил</value>
  </data>
  <data name="AttImage" xml:space="preserve">
    <value>Прикрепить изображение</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Назад</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="CitizensWon" xml:space="preserve">
    <value>Мирные жители победили</value>
  </data>
  <data name="Civilian" xml:space="preserve">
    <value>Мирный житель</value>
  </data>
  <data name="CivilianDes" xml:space="preserve">
    <value>Простой человек. Спит ночью. Единственное, что может - голосовать</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>День</value>
  </data>
  <data name="DeathVibr" xml:space="preserve">
    <value>Вибрация при смерти</value>
  </data>
  <data name="Detective" xml:space="preserve">
    <value>Детектив</value>
  </data>
  <data name="DetectiveDes" xml:space="preserve">
    <value>Последняя надежда этого города. Ночью может определить сторону игрока (темная / светлая)</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>Отключиться</value>
  </data>
  <data name="Doctor" xml:space="preserve">
    <value>Доктор</value>
  </data>
  <data name="DoctorDes" xml:space="preserve">
    <value>Ангел хранитель этого города. Ночью может спасти одного игрока. Не может спасать одного и того же игрока две ночи подряд</value>
  </data>
  <data name="Don" xml:space="preserve">
    <value>Дон</value>
  </data>
  <data name="DonDes" xml:space="preserve">
    <value>Босс мафии. Ночью может узнать, является ли игрок детективом</value>
  </data>
  <data name="DrawVote" xml:space="preserve">
    <value>Кажется, сегодня никто не сядет в тюрьму</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Выход</value>
  </data>
  <data name="ExitQ" xml:space="preserve">
    <value>Выйти?</value>
  </data>
  <data name="Girl" xml:space="preserve">
    <value>Любовница</value>
  </data>
  <data name="GirlDes" xml:space="preserve">
    <value>Может подарить одному игроку алиби на дневное голосование..., а также прекрасную ночь. Ночью может умереть только с выбраным игроком. Не может давать алиби одному и тому же игроку две ночи подряд</value>
  </data>
  <data name="Heal" xml:space="preserve">
    <value>Лечить</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Спрятать</value>
  </data>
  <data name="Host" xml:space="preserve">
    <value>Ведущий</value>
  </data>
  <data name="HowToPlay" xml:space="preserve">
    <value>Как играть</value>
  </data>
  <data name="Immortal" xml:space="preserve">
    <value>Бессмертный</value>
  </data>
  <data name="ImmortalDes" xml:space="preserve">
    <value>Доступен начиная с 9 игроков. Обычный мирный житель, который не может умереть ночью</value>
  </data>
  <data name="InputName" xml:space="preserve">
    <value>Введите имя</value>
  </data>
  <data name="InputPass" xml:space="preserve">
    <value>Введите пароль от комнаты</value>
  </data>
  <data name="Kill" xml:space="preserve">
    <value>Убить</value>
  </data>
  <data name="Killed" xml:space="preserve">
    <value>Убиты</value>
  </data>
  <data name="KilledPl" xml:space="preserve">
    <value>Убит</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Язык</value>
  </data>
  <data name="Mafia" xml:space="preserve">
    <value>Мафия</value>
  </data>
  <data name="MafiaDes" xml:space="preserve">
    <value>Должна захватить этот город. Убивает ночью. Скрывается днем</value>
  </data>
  <data name="MafiaWon" xml:space="preserve">
    <value>Мафия победила</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Сообщение</value>
  </data>
  <data name="NameNotEmpty" xml:space="preserve">
    <value>Имя не может быть пустым</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Дальше</value>
  </data>
  <data name="NichtGirl" xml:space="preserve">
    <value>Ночь - Любовница</value>
  </data>
  <data name="NightAssassin" xml:space="preserve">
    <value>Ночь - Убийца</value>
  </data>
  <data name="NightDetecive" xml:space="preserve">
    <value>Ночь - Детектив</value>
  </data>
  <data name="NightDoctor" xml:space="preserve">
    <value>Ночь - Доктор</value>
  </data>
  <data name="NightDon" xml:space="preserve">
    <value>Ночь - Дон</value>
  </data>
  <data name="NightMafia" xml:space="preserve">
    <value>Ночь - Мафия</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Нет</value>
  </data>
  <data name="No Iternet" xml:space="preserve">
    <value>Нет подключения к Интернету</value>
  </data>
  <data name="NobodyDied" xml:space="preserve">
    <value>Сегодня ночью никто не умер</value>
  </data>
  <data name="NotEnoghPlayers" xml:space="preserve">
    <value>Не достаточно игроков для начала игры</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OpenRoom" xml:space="preserve">
    <value>Открыть</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>Игрок</value>
  </data>
  <data name="PlayersConnected" xml:space="preserve">
    <value>Подключено игроков</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Сообщение об ошибке</value>
  </data>
  <data name="ReportTitle" xml:space="preserve">
    <value>Сообщение об ошибке / Пожелание</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Сбросить</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Роли</value>
  </data>
  <data name="RoomPass" xml:space="preserve">
    <value>Пароль от комнаты</value>
  </data>
  <data name="RoomTitle" xml:space="preserve">
    <value>Название комнаты</value>
  </data>
  <data name="RoomTitleNotEmpty" xml:space="preserve">
    <value>Название комнаты не может быть пустым</value>
  </data>
  <data name="Rule1" xml:space="preserve">
    <value>Соберитесь с друзьями (Минимальное количество игроков - 6)</value>
  </data>
  <data name="Rule2" xml:space="preserve">
    <value>Выберете ведущего</value>
  </data>
  <data name="Rule3" xml:space="preserve">
    <value>Подключитесь к единой сети wi-fi (некоторые общественные сети могут не подходить для игры). Создайте комнату и подключитесь к ней</value>
  </data>
  <data name="Rule4" xml:space="preserve">
    <value>Следуйте указаниям ведущего</value>
  </data>
  <data name="Rule5" xml:space="preserve">
    <value>Общайтесь и получайте удовольствие!</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Отправить</value>
  </data>
  <data name="Sending" xml:space="preserve">
    <value>Отправка</value>
  </data>
  <data name="ServerStoped" xml:space="preserve">
    <value>Сервер остановлен</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="StartGame" xml:space="preserve">
    <value>Начать игру</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Остановить</value>
  </data>
  <data name="ToMainMenu" xml:space="preserve">
    <value>Выйти в главное меню</value>
  </data>
  <data name="Tutorial" xml:space="preserve">
    <value>Руководство</value>
  </data>
  <data name="Vote" xml:space="preserve">
    <value>Голосование</value>
  </data>
  <data name="Wish" xml:space="preserve">
    <value>Пожелание</value>
  </data>
  <data name="WrongPass" xml:space="preserve">
    <value>Неверный пароль</value>
  </data>
  <data name="WrongWifi" xml:space="preserve">
    <value>Текущая сеть не подходит для игры</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Да</value>
  </data>
</root>